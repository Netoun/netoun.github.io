---
import { getLangFromUrl, getRouteFromUrl, useTranslatedPath } from "@i18n/utils"

const lang = getLangFromUrl(Astro.url)
const route = getRouteFromUrl(Astro.url)
const translatePath = useTranslatedPath(lang)

const languages = [
  { code: "en", name: "English", flag: "ðŸ‡¬ðŸ‡§" },
  { code: "fr", name: "FranÃ§ais", flag: "ðŸ‡«ðŸ‡·" }
] as const

const currentLanguage = languages.find((l) => l.code === lang) || languages[0]
---

<div class='relative' id='language-switcher'>
  <button
    type='button'
    class='inline-flex h-9 items-center gap-2 rounded-full border border-primary/20 px-3 text-sm font-medium text-primary hover:bg-primary/5 focus:outline-none focus:ring-2 focus:ring-primary/20'
    aria-expanded='false'
    aria-haspopup='true'
  >
    <span class='text-base'>{currentLanguage.flag}</span>
    <span class='hidden md:block'>{currentLanguage.name}</span>
    <span class='block uppercase md:hidden'>{currentLanguage.code}</span>
    <svg
      class='h-4 w-4 transition-transform duration-200'
      id='arrow-icon'
      viewBox='0 0 20 20'
      fill='currentColor'
    >
      <path
        fill-rule='evenodd'
        d='M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z'
        clip-rule='evenodd'></path>
    </svg>
  </button>

  <div
    class='absolute right-0 z-10 mt-2 hidden w-40 origin-top-right rounded-2xl border border-primary/10 bg-background shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none'
    role='menu'
    aria-orientation='vertical'
    aria-labelledby='menu-button'
    tabindex='-1'
    id='language-menu'
  >
    <div class='p-1' role='none'>
      {
        languages.map((language) => (
          <a
            href={translatePath(`/${route ? route : ""}`, language.code)}
            class:list={[
              "flex items-center gap-2 rounded-xl px-4 py-2 text-sm hover:bg-primary/5",
              {
                "bg-primary/10":
                  lang === language.code || (!lang && language.code === "en")
              }
            ]}
            role='menuitem'
            tabindex='-1'
          >
            <span class='text-base'>{language.flag}</span>
            <span class=''>{language.name}</span>
          </a>
        ))
      }
    </div>
  </div>
</div>

<script>
  const languageSwitcher = document.getElementById("language-switcher")
  const button = languageSwitcher?.querySelector("button")
  const menu = document.getElementById("language-menu")
  const arrowIcon = document.getElementById("arrow-icon")
  let isOpen = false

  function toggleMenu() {
    isOpen = !isOpen
    menu?.classList.toggle("hidden")
    arrowIcon?.classList.toggle("rotate-180")
    button?.setAttribute("aria-expanded", isOpen.toString())
  }

  function closeMenu() {
    isOpen = false
    menu?.classList.add("hidden")
    arrowIcon?.classList.remove("rotate-180")
    button?.setAttribute("aria-expanded", "false")
  }

  button?.addEventListener("click", (e) => {
    e.stopPropagation()
    toggleMenu()
  })

  document.addEventListener("click", (e) => {
    if (!languageSwitcher?.contains(e.target as Node)) {
      closeMenu()
    }
  })
</script>
