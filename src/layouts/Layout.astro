---
import { MoonIcon, SunIcon } from "lucide-react"

import "@fontsource-variable/newsreader"
import "@fontsource-variable/noto-sans"
import "../styles/base.css"

interface Props {
  title: string
  description: string
}

const { title, description } = Astro.props
---

<!doctype html>
<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/logo.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
    <meta name='description' content={description} />
    <meta name='author' content='Nicolas Coulonnier' />
    <meta property='og:image' content='http://netoun.github.io/profile.jpg' />
  </head>
  <div
    class='absolute -left-1/4 -top-1/4 z-[-1] h-1/2 min-h-96 w-1/2 min-w-96 rounded-full bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-primary to-transparent opacity-50 blur-[12rem]'
  >
  </div>
  <body class='overflow-x-hidden scroll-smooth bg-background text-foreground'>
    <header
      class='sticky top-0 z-[999] h-[var(--height-header)] border-b border-primary/10 px-4 backdrop-blur-3xl print:hidden'
    >
      <div class='container mx-auto flex h-full items-center justify-between'>
        <div class='size-8'>
          <a href='/'>
            <img
              src='/logo.svg'
              alt='Logo'
              class='drop-shadow-[0_0px_5px_hsla(var(--primary)/0.5)]'
            />
          </a>
        </div>
        <div>
          <button id='theme-toggle' class='relative'>
            <span class='sr-only'>Switch theme</span>
            <span
              class='dark: absolute left-0 top-[0.3rem] size-6 translate-x-[0.45rem] rounded-full bg-secondary transition-transform duration-300 ease-in-out dark:translate-x-[2.15rem]'
            ></span>
            <div class='relative flex gap-2 rounded-2xl border px-2 py-1.5'>
              <div
                class='flex size-5 items-center justify-center text-secondary-foreground dark:text-foreground'
              >
                <SunIcon size='16' />
              </div>
              <div class='flex size-5 items-center justify-center'>
                <MoonIcon size='16' />
              </div>
            </div>
          </button>
        </div>
      </div>
    </header>
    <main class='container mx-auto px-4'>
      <slot />
    </main>
    <footer class='h-[var(--height-footer)] print:hidden'>
      <div class='flex items-center justify-center'>
        <p>Â© 2024 - Nicolas Coulonnier</p>
      </div>
    </footer>

    <script is:inline>
      document.addEventListener("DOMContentLoaded", () => {
        // Create the cursor element
        const wrapperCursor = document.createElement("div")
        wrapperCursor.classList.add("wrapper-cursor")
        document.body.appendChild(wrapperCursor)

        const cursor = document.createElement("div")
        cursor.classList.add("cursor")
        wrapperCursor.appendChild(cursor)

        // Function to update cursor position
        const updateCursorPosition = (event) => {
          cursor.style.setProperty("--cursor-x", `${event.clientX}px`)
          cursor.style.setProperty("--cursor-y", `${event.clientY}px`)
        }

        // Add event listener for mouse movement
        document.addEventListener("mousemove", updateCursorPosition)
      })

      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme")
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light"
      }
      const isDark = getThemePreference() === "dark"
      document.documentElement.classList[isDark ? "add" : "remove"]("dark")

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark")
          localStorage.setItem("theme", isDark ? "dark" : "light")
        })
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"]
        })
      }

      const themeToggle = document.getElementById("theme-toggle")
      themeToggle.addEventListener("click", () => {
        document.documentElement.classList.toggle("dark")
      })
    </script>
  </body>


</html>
