---
import '../styles/base.css'
import '@fontsource/caveat-brush'

import Header from '../components/Header.astro'
interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang='en'>
  <head>
    <link
      rel='preload'
      href='/fonts/PPTelegraf-Regular.otf'
      as='font'
      type='font/otf'
      crossorigin
    />
    <link
      rel='preload'
      href='/fonts/PPTelegraf-Ultrabold.otf'
      as='font'
      type='font/otf'
      crossorigin
    />
    <link
      rel='preload'
      href='/fonts/PPTelegraf-Ultrabold.otf'
      as='font'
      type='font/otf'
      crossorigin
    />
    <meta charset='UTF-8' />
    <meta name='description' content='Astro description' />
    <meta name='viewport' content='width=device-width' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='generator' content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class='text-primary bg-secondary'>
    <Header />
    <main class='h-full'>
      <slot />
    </main>
  </body>
</html>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }
  const isDark = getThemePreference() === 'dark'
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark')
      localStorage.setItem('theme', isDark ? 'dark' : 'light')
    })
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['class']
    })
  }
</script>
